{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{connectToSocket,disconnectFromSocket}from'../actions/socketActions';import{setCurrentScreen}from'../actions/applicationStateActions';import{setUserLoggedIn}from'../actions/userActions';function TopMenu(props){var connectToSocket=props.connectToSocket,disconnectFromSocket=props.disconnectFromSocket,setCurrentScreen=props.setCurrentScreen,setUserLoggedIn=props.setUserLoggedIn,user=props.user;var userLoggedIn=user.loggedIn;var handlePlay=function handlePlay(){setCurrentScreen('GameSession');connectToSocket();};var handleLogin=function handleLogin(){setCurrentScreen('Login');};var handleLogout=function handleLogout(){disconnectFromSocket();localStorage.removeItem('jwt');localStorage.removeItem('gameSaveID');setUserLoggedIn(false);setCurrentScreen('Logout');};var handleSignup=function handleSignup(){disconnectFromSocket();setCurrentScreen('Signup');};var renderMainSection=function renderMainSection(){var toRender=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:handleLogin},\"Login\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleSignup},\"Sign Up\"));if(userLoggedIn){toRender=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",null,\"Profile\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleLogout},\"Logout\"));}return toRender;};return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"right\"}},/*#__PURE__*/React.createElement(\"button\",{onClick:handlePlay},\"Play\"),renderMainSection());}function mapStateToProps(state){return{user:state.user};}function mapDispatchToProps(dispatch){return{connectToSocket:connectToSocket(dispatch),disconnectFromSocket:disconnectFromSocket(dispatch),setCurrentScreen:setCurrentScreen(dispatch),setUserLoggedIn:setUserLoggedIn(dispatch)};}export default connect(mapStateToProps,mapDispatchToProps)(TopMenu);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/TopMenu.jsx"],"names":["React","connect","connectToSocket","disconnectFromSocket","setCurrentScreen","setUserLoggedIn","TopMenu","props","user","userLoggedIn","loggedIn","handlePlay","handleLogin","handleLogout","localStorage","removeItem","handleSignup","renderMainSection","toRender","textAlign","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,eAAT,CAA0BC,oBAA1B,KAAsD,0BAAtD,CACA,OAASC,gBAAT,KAAiC,oCAAjC,CACA,OAASC,eAAT,KAAgC,wBAAhC,CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,IAEpBL,CAAAA,eAFoB,CAIlBK,KAJkB,CAEpBL,eAFoB,CAEHC,oBAFG,CAIlBI,KAJkB,CAEHJ,oBAFG,CAEmBC,gBAFnB,CAIlBG,KAJkB,CAEmBH,gBAFnB,CAGpBC,eAHoB,CAIlBE,KAJkB,CAGpBF,eAHoB,CAGHG,IAHG,CAIlBD,KAJkB,CAGHC,IAHG,CAKtB,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,QAA1B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBP,gBAAgB,CAAC,aAAD,CAAhB,CACAF,eAAe,GAChB,CAHD,CAKA,GAAMU,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBR,gBAAgB,CAAC,OAAD,CAAhB,CACD,CAFD,CAIA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBV,oBAAoB,GACpBW,YAAY,CAACC,UAAb,CAAwB,KAAxB,EACAD,YAAY,CAACC,UAAb,CAAwB,YAAxB,EACAV,eAAe,CAAC,KAAD,CAAf,CACAD,gBAAgB,CAAC,QAAD,CAAhB,CACD,CAND,CAQA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBb,oBAAoB,GACpBC,gBAAgB,CAAC,QAAD,CAAhB,CACD,CAHD,CAKA,GAAMa,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAIC,CAAAA,QAAQ,cACV,qDACE,8BAAQ,OAAO,CAAEN,WAAjB,UADF,cAEE,8BAAQ,OAAO,CAAEI,YAAjB,YAFF,CADF,CAOA,GAAIP,YAAJ,CAAkB,CAChBS,QAAQ,cACN,qDACE,4CADF,cAEE,8BAAQ,OAAO,CAAEL,YAAjB,WAFF,CADF,CAMD,CAED,MAAOK,CAAAA,QAAP,CACD,CAlBD,CAoBA,mBACE,2BAAK,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAb,CAAZ,eACE,8BAAQ,OAAO,CAAER,UAAjB,SADF,CAEGM,iBAAiB,EAFpB,CADF,CAMD,CAED,QAASG,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLb,IAAI,CAAEa,KAAK,CAACb,IADP,CAAP,CAGD,CAED,QAASc,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLrB,eAAe,CAAEA,eAAe,CAACqB,QAAD,CAD3B,CAELpB,oBAAoB,CAAEA,oBAAoB,CAACoB,QAAD,CAFrC,CAGLnB,gBAAgB,CAAEA,gBAAgB,CAACmB,QAAD,CAH7B,CAILlB,eAAe,CAAEA,eAAe,CAACkB,QAAD,CAJ3B,CAAP,CAMD,CAED,cAAetB,CAAAA,OAAO,CACpBmB,eADoB,CAEpBE,kBAFoB,CAAP,CAGbhB,OAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { connectToSocket, disconnectFromSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\nimport { setUserLoggedIn } from '../actions/userActions';\n\nfunction TopMenu(props) {\n  const {\n    connectToSocket, disconnectFromSocket, setCurrentScreen,\n    setUserLoggedIn, user\n  } = props;\n  const userLoggedIn = user.loggedIn;\n\n  const handlePlay = () => {\n    setCurrentScreen('GameSession');\n    connectToSocket();\n  }\n\n  const handleLogin = () => {\n    setCurrentScreen('Login');\n  }\n\n  const handleLogout = () => {\n    disconnectFromSocket();\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('gameSaveID');\n    setUserLoggedIn(false);\n    setCurrentScreen('Logout');\n  }\n\n  const handleSignup = () => {\n    disconnectFromSocket();\n    setCurrentScreen('Signup');\n  }\n\n  const renderMainSection = () => {\n    let toRender = (\n      <>\n        <button onClick={handleLogin}>Login</button>\n        <button onClick={handleSignup}>Sign Up</button>\n      </>\n    );\n\n    if (userLoggedIn) {\n      toRender = (\n        <>\n          <button>Profile</button>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      );\n    }\n\n    return toRender;\n  }\n\n  return (\n    <div style={{ textAlign: \"right\" }}>\n      <button onClick={handlePlay}>Play</button>\n      {renderMainSection()}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    disconnectFromSocket: disconnectFromSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch),\n    setUserLoggedIn: setUserLoggedIn(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopMenu);\n"]},"metadata":{},"sourceType":"module"}