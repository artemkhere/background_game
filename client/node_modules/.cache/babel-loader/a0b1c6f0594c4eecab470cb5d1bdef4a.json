{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/Signup.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const {\n    connectToSocket,\n    setCurrentScreen\n  } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSignupStep('Loading');\n    axios.post(\"http://127.0.0.1:6969/api/signup\", {\n      body: {\n        firstName: 'Fred',\n        lastName: 'Flintstone'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const signupForm = () => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Sign Up For An Account\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: handleEmailChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: handlePasswordChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const signupLoading = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, \"Loading\");\n  };\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession'); // in this connectToSocket I will need to pass userID and jwt\n\n    connectToSocket();\n  };\n\n  const signupSuccess = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Congrats, your account had been created!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Signed in as: USER EMAIL GOES HERE\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleStartNewGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Start New Game\"));\n  };\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch (signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n\n      case 'Loading':\n        toRender = signupLoading();\n        break;\n      // case 'Error':\n      //   // already logged in error needs to be handled here\n      //   toRender = signupError();\n      //   break;\n      // case 'SignupSuccess':\n      //   toRender = signupSuccess();\n      //   break;\n\n      default:\n        toRender = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 20\n          }\n        }, \"Error\");\n    }\n\n    return toRender;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, renderSignupStep());\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/Signup.jsx"],"names":["React","useState","connect","axios","connectToSocket","setCurrentScreen","Signup","props","signupStep","setSignupStep","email","setEmail","password","setPassword","handleEmailChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","post","body","firstName","lastName","then","response","console","log","catch","error","signupForm","signupLoading","handleStartNewGame","signupSuccess","textAlign","renderSignupStep","toRender","mapStateToProps","state","socket","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const { connectToSocket, setCurrentScreen } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSignupStep('Loading');\n    axios.post(\"http://127.0.0.1:6969/api/signup\", {\n      body: {\n        firstName: 'Fred',\n        lastName: 'Flintstone'\n      }\n\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  const signupForm = () => {\n    return (\n      <form onSubmit={handleSubmit}>\n        <h1>Sign Up For An Account</h1>\n        <label>Email</label>\n        <input\n          name='email'\n          type='email'\n          placeholder='Email'\n          value={email}\n          onChange={handleEmailChange}\n          required\n        />\n        <br/>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          value={password}\n          onChange={handlePasswordChange}\n          required\n        />\n        <input type='submit'/>\n      </form>\n    );\n  }\n\n  const signupLoading = () => {\n    return (\n      <div>Loading</div>\n    );\n  }\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession');\n    // in this connectToSocket I will need to pass userID and jwt\n    connectToSocket();\n  }\n\n  const signupSuccess = () => {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div>Congrats, your account had been created!</div>\n        <div>Signed in as: USER EMAIL GOES HERE</div>\n        <button onClick={handleStartNewGame}>Start New Game</button>\n      </div>\n    );\n  }\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch(signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n      case 'Loading':\n        toRender = signupLoading();\n        break;\n      // case 'Error':\n      //   // already logged in error needs to be handled here\n      //   toRender = signupError();\n      //   break;\n      // case 'SignupSuccess':\n      //   toRender = signupSuccess();\n      //   break;\n      default:\n        toRender = <div>Error</div>;\n    }\n\n    return toRender;\n  }\n\n  return (\n    <div>{renderSignupStep()}</div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n"]},"metadata":{},"sourceType":"module"}