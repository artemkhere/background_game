{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport socketIOClient from 'socket.io-client';\nimport rootReducer from '../reducers/rootReducer';\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst createGameSessionSocketMiddleware = url => {\n  let socket;\n  return storeAPI => next => action => {\n    switch (action.type) {\n      case \"GAME_SESSION_SOCKET_CONNECT\":\n        {\n          socket = socketIOClient(url); // socket.on('connect_failed', () => {\n          //   storeAPI.dispatch({ type : \"FAILED_TO_CONNECT_TO_GAME_SESSION\" });\n          // });\n\n          socket.on('connect_error', error => {\n            console.log('connect_error');\n            storeAPI.dispatch({\n              type: \"GAME_SESSION_SOCKET_CONNECT_ERROR\",\n              payload: error\n            });\n          });\n          socket.on('error', error => {\n            storeAPI.dispatch({\n              type: \"GAME_SESSION_SOCKET_ERROR\",\n              payload: error\n            });\n          });\n          socket.on('connect', socket => {\n            console.log('connected to server');\n            socket.on('error', error => {\n              storeAPI.dispatch({\n                type: \"GAME_SESSION_SOCKET_ERROR\",\n                payload: error\n              });\n            });\n            socket.on('connect_timeout', timeout => {\n              console.log('connect_timeout');\n              storeAPI.dispatch({\n                type: \"GAME_SESSION_SOCKET_TIMEOUT\",\n                payload: timeout\n              });\n            });\n            socket.on('disconnect', () => {\n              console.log('Got disconnected!');\n            });\n          }); // socket.on(\"message\", (message) => {\n          //     storeAPI.dispatch({\n          //         type : \"SOCKET_MESSAGE_RECEIVED\",\n          //         payload : message\n          //     });\n          // });\n          // will need to handle setting global state for returned Tower object with all info\n\n          socket.on(\"FromAPI\", data => {\n            console.log(data);\n          });\n          break;\n        }\n\n      case \"SEND_WEBSOCKET_MESSAGE\":\n        {\n          socket.send(action.payload);\n          return;\n        }\n    }\n\n    return next(action);\n  };\n};\n\nconst gameSessionSocketMiddleware = createGameSessionSocketMiddleware(\"http://127.0.0.1:6969\");\nexport default function configureStore() {\n  return createStore(rootReducer, composeEnhancer(applyMiddleware(thunk, gameSessionSocketMiddleware)));\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/store/configureStore.js"],"names":["createStore","compose","applyMiddleware","thunk","socketIOClient","rootReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createGameSessionSocketMiddleware","url","socket","storeAPI","next","action","type","on","error","console","log","dispatch","payload","timeout","data","send","gameSessionSocketMiddleware","configureStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAvE;;AAEA,MAAMQ,iCAAiC,GAAIC,GAAD,IAAS;AAC/C,MAAIC,MAAJ;AAEA,SAAOC,QAAQ,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACjC,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,6BAAL;AAAqC;AACjCJ,UAAAA,MAAM,GAAGP,cAAc,CAACM,GAAD,CAAvB,CADiC,CAGjC;AACA;AACA;;AAEAC,UAAAA,MAAM,CAACK,EAAP,CAAU,eAAV,EAA4BC,KAAD,IAAW;AACpCC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAP,YAAAA,QAAQ,CAACQ,QAAT,CAAkB;AAChBL,cAAAA,IAAI,EAAG,mCADS;AAEhBM,cAAAA,OAAO,EAAEJ;AAFO,aAAlB;AAID,WAND;AAQAN,UAAAA,MAAM,CAACK,EAAP,CAAU,OAAV,EAAoBC,KAAD,IAAW;AAC5BL,YAAAA,QAAQ,CAACQ,QAAT,CAAkB;AAChBL,cAAAA,IAAI,EAAG,2BADS;AAEhBM,cAAAA,OAAO,EAAEJ;AAFO,aAAlB;AAID,WALD;AAOAN,UAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAsBL,MAAD,IAAY;AAC/BO,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEAR,YAAAA,MAAM,CAACK,EAAP,CAAU,OAAV,EAAoBC,KAAD,IAAW;AAC5BL,cAAAA,QAAQ,CAACQ,QAAT,CAAkB;AAChBL,gBAAAA,IAAI,EAAG,2BADS;AAEhBM,gBAAAA,OAAO,EAAEJ;AAFO,eAAlB;AAID,aALD;AAOAN,YAAAA,MAAM,CAACK,EAAP,CAAU,iBAAV,EAA8BM,OAAD,IAAa;AACxCJ,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAP,cAAAA,QAAQ,CAACQ,QAAT,CAAkB;AAChBL,gBAAAA,IAAI,EAAG,6BADS;AAEhBM,gBAAAA,OAAO,EAAEC;AAFO,eAAlB;AAID,aAND;AAQAX,YAAAA,MAAM,CAACK,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BE,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,aAFD;AAGD,WArBD,EAtBiC,CA6CjC;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAR,UAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAsBO,IAAD,IAAU;AAC7BL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,WAFD;AAGA;AACH;;AACD,WAAK,wBAAL;AAA+B;AAC3BZ,UAAAA,MAAM,CAACa,IAAP,CAAYV,MAAM,CAACO,OAAnB;AACA;AACH;AA9DL;;AAiEA,WAAOR,IAAI,CAACC,MAAD,CAAX;AACH,GAnED;AAoEH,CAvED;;AAyEA,MAAMW,2BAA2B,GAAGhB,iCAAiC,CAAC,uBAAD,CAArE;AAEA,eAAe,SAASiB,cAAT,GAA0B;AACvC,SAAO1B,WAAW,CAChBK,WADgB,EAEhBC,eAAe,CAACJ,eAAe,CAACC,KAAD,EAAQsB,2BAAR,CAAhB,CAFC,CAAlB;AAID","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport socketIOClient from 'socket.io-client';\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst createGameSessionSocketMiddleware = (url) => {\n    let socket;\n\n    return storeAPI => next => action => {\n        switch(action.type) {\n            case \"GAME_SESSION_SOCKET_CONNECT\" : {\n                socket = socketIOClient(url);\n\n                // socket.on('connect_failed', () => {\n                //   storeAPI.dispatch({ type : \"FAILED_TO_CONNECT_TO_GAME_SESSION\" });\n                // });\n\n                socket.on('connect_error', (error) => {\n                  console.log('connect_error');\n                  storeAPI.dispatch({\n                    type : \"GAME_SESSION_SOCKET_CONNECT_ERROR\",\n                    payload: error\n                  });\n                });\n\n                socket.on('error', (error) => {\n                  storeAPI.dispatch({\n                    type : \"GAME_SESSION_SOCKET_ERROR\",\n                    payload: error\n                  });\n                });\n\n                socket.on('connect', (socket) => {\n                  console.log('connected to server');\n\n                  socket.on('error', (error) => {\n                    storeAPI.dispatch({\n                      type : \"GAME_SESSION_SOCKET_ERROR\",\n                      payload: error\n                    });\n                  });\n\n                  socket.on('connect_timeout', (timeout) => {\n                    console.log('connect_timeout');\n                    storeAPI.dispatch({\n                      type : \"GAME_SESSION_SOCKET_TIMEOUT\",\n                      payload: timeout\n                    });\n                  });\n\n                  socket.on('disconnect', () => {\n                    console.log('Got disconnected!');\n                  });\n                });\n\n                // socket.on(\"message\", (message) => {\n                //     storeAPI.dispatch({\n                //         type : \"SOCKET_MESSAGE_RECEIVED\",\n                //         payload : message\n                //     });\n                // });\n\n                // will need to handle setting global state for returned Tower object with all info\n                socket.on(\"FromAPI\", (data) => {\n                  console.log(data);\n                });\n                break;\n            }\n            case \"SEND_WEBSOCKET_MESSAGE\": {\n                socket.send(action.payload);\n                return;\n            }\n        }\n\n        return next(action);\n    }\n}\n\nconst gameSessionSocketMiddleware = createGameSessionSocketMiddleware(\"http://127.0.0.1:6969\");\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(thunk, gameSessionSocketMiddleware))\n  );\n}\n"]},"metadata":{},"sourceType":"module"}