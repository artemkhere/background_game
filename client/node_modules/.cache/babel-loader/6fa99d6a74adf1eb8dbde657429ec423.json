{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from 'socket.io-client';\nimport { connectToSocket } from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\nlet socket;\n\nfunction GameSession(props) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  useEffect(() => {\n    console.log('render'); // socket = socket || new WebSocket(\"http://127.0.0.1:6969\");\n\n    socket = socket || new WebSocket(\"ws://127.0.0.1:6969\");\n    console.log(socket);\n  }); // useEffect(() => {\n  //   console.log('render')\n  //   socket = socket || socketIOClient(\"http://127.0.0.1:6969\");\n  //\n  //   console.log(\"socket.connected\")\n  //   console.log(socket.connected)\n  //\n  //   socket.on('connect', (data) => {\n  //     // handle hydration of game state from this data\n  //     console.log(\"SOCKET_CONNECT\");\n  //   });\n  //\n  //   socket.on('disconnect', (timeout) => {\n  //     console.log(\"SOCKET_DISCONNECT\");\n  //   });\n  //\n  //   socket.on(\"FromAPI\", (message) => {\n  //     console.log(message);\n  //     console.log(\"FromAPI\")\n  //   });\n  // });\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, error.message);\n  }\n\n  ;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.connectToSocket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"loooooool\"), /*#__PURE__*/React.createElement(ClickableArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count,\n    stuff: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: () => dispatch({\n      type: \"SOCKET_TRIGGER_CONNECT\"\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSession);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["React","useState","useEffect","connect","socketIOClient","connectToSocket","ClickableArea","socket","GameSession","props","error","setError","loading","setLoading","connectedToSocket","setConnectedToSocket","console","log","WebSocket","message","textAlign","mapStateToProps","state","count","stuff","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAIC,MAAJ;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,KAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADc,CAGd;;AACAV,IAAAA,MAAM,GAAGA,MAAM,IAAI,IAAIW,SAAJ,CAAc,qBAAd,CAAnB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACD,GANQ,CAAT,CAL0B,CAa1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIG,KAAJ,EAAW;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACS,OAAZ,CAAP;AAAoC;;AAAA;;AACjD,MAAIP,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAE9C,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAEX,KAAK,CAACJ,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,SAASgB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID;;AAED,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLrB,IAAAA,eAAe,EAAE,MAAMqB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAD1B,GAAP;AAGD;;AAED,eAAexB,OAAO,CACpBkB,eADoB,EAEpBI,kBAFoB,CAAP,CAGbjB,WAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from 'socket.io-client';\n\nimport { connectToSocket } from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\n\nlet socket;\n\nfunction GameSession(props) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n\n  useEffect(() => {\n    console.log('render')\n\n    // socket = socket || new WebSocket(\"http://127.0.0.1:6969\");\n    socket = socket || new WebSocket(\"ws://127.0.0.1:6969\");\n    console.log(socket);\n  });\n\n  // useEffect(() => {\n  //   console.log('render')\n  //   socket = socket || socketIOClient(\"http://127.0.0.1:6969\");\n  //\n  //   console.log(\"socket.connected\")\n  //   console.log(socket.connected)\n  //\n  //   socket.on('connect', (data) => {\n  //     // handle hydration of game state from this data\n  //     console.log(\"SOCKET_CONNECT\");\n  //   });\n  //\n  //   socket.on('disconnect', (timeout) => {\n  //     console.log(\"SOCKET_DISCONNECT\");\n  //   });\n  //\n  //   socket.on(\"FromAPI\", (message) => {\n  //     console.log(message);\n  //     console.log(\"FromAPI\")\n  //   });\n  // });\n\n  if (error) { return <div>{error.message}</div>; };\n  if (loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div onClick={props.connectToSocket}>loooooool</div>\n      <ClickableArea />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count,\n    stuff: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: () => dispatch({ type: \"SOCKET_TRIGGER_CONNECT\" })\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameSession);\n"]},"metadata":{},"sourceType":"module"}