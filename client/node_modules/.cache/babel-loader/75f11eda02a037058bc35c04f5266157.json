{"ast":null,"code":"import { SOCKET_TRIGGER_CONNECT, SOCKET_SET_ERROR, SOCKET_CONNECT, SOCKET_TRIGGER_DISCONNECT, SOCKET_SET_LOADING } from './actionTypes';\nexport function connectToSocket(dispatch) {\n  return () => {\n    dispatch({\n      type: SOCKET_TRIGGER_CONNECT\n    });\n  };\n}\nexport function setSocketLoading(dispatch, loading) {\n  dispatch({\n    type: SOCKET_SET_LOADING,\n    payload: loading\n  });\n}\nexport function handleSocketConnect(dispatch, data) {\n  dispatch({\n    type: SOCKET_CONNECT,\n    payload: data\n  });\n}\nexport function setSocketError(dispatch, error) {\n  dispatch({\n    type: SOCKET_SET_ERROR,\n    payload: error\n  });\n}\nexport function disconnectFromSocket(dispatch) {\n  dispatch({\n    type: SOCKET_SET_ERROR,\n    payload: error\n  });\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/actions/socketActions.js"],"names":["SOCKET_TRIGGER_CONNECT","SOCKET_SET_ERROR","SOCKET_CONNECT","SOCKET_TRIGGER_DISCONNECT","SOCKET_SET_LOADING","connectToSocket","dispatch","type","setSocketLoading","loading","payload","handleSocketConnect","data","setSocketError","error","disconnectFromSocket"],"mappings":"AAAA,SACEA,sBADF,EAC0BC,gBAD1B,EAC4CC,cAD5C,EAEEC,yBAFF,EAE6BC,kBAF7B,QAGO,eAHP;AAKA,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,SAAO,MAAM;AACXA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASQ,gBAAT,CAA0BF,QAA1B,EAAoCG,OAApC,EAA6C;AAClDH,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEH,kBADC;AAEPM,IAAAA,OAAO,EAAED;AAFF,GAAD,CAAR;AAID;AAED,OAAO,SAASE,mBAAT,CAA6BL,QAA7B,EAAuCM,IAAvC,EAA6C;AAClDN,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL,cADC;AAEPQ,IAAAA,OAAO,EAAEE;AAFF,GAAD,CAAR;AAID;AAED,OAAO,SAASC,cAAT,CAAwBP,QAAxB,EAAkCQ,KAAlC,EAAyC;AAC9CR,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,gBADC;AAEPS,IAAAA,OAAO,EAAEI;AAFF,GAAD,CAAR;AAID;AAED,OAAO,SAASC,oBAAT,CAA8BT,QAA9B,EAAwC;AAC7CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN,gBADC;AAEPS,IAAAA,OAAO,EAAEI;AAFF,GAAD,CAAR;AAID","sourcesContent":["import {\n  SOCKET_TRIGGER_CONNECT, SOCKET_SET_ERROR, SOCKET_CONNECT,\n  SOCKET_TRIGGER_DISCONNECT, SOCKET_SET_LOADING\n} from './actionTypes';\n\nexport function connectToSocket(dispatch) {\n  return () => {\n    dispatch({ type: SOCKET_TRIGGER_CONNECT });\n  }\n}\n\nexport function setSocketLoading(dispatch, loading) {\n  dispatch({\n    type: SOCKET_SET_LOADING,\n    payload: loading\n  });\n}\n\nexport function handleSocketConnect(dispatch, data) {\n  dispatch({\n    type: SOCKET_CONNECT,\n    payload: data\n  });\n}\n\nexport function setSocketError(dispatch, error) {\n  dispatch({\n    type: SOCKET_SET_ERROR,\n    payload: error\n  });\n}\n\nexport function disconnectFromSocket(dispatch) {\n  dispatch({\n    type: SOCKET_SET_ERROR,\n    payload: error\n  });\n}\n"]},"metadata":{},"sourceType":"module"}