{"ast":null,"code":"import initialState from'./initialState';import{SET_CURRENT_SCREEN,SET_APPLICATION_ERROR,SET_APPLICATION_LOADING}from'../actions/actionTypes';export default function count(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.applicationState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_CURRENT_SCREEN:return Object.assign({},state,{currentScreen:action.payload,loading:false,error:false});case SET_APPLICATION_ERROR:return Object.assign({},state,{error:action.payload,loading:false});case SET_APPLICATION_LOADING:return Object.assign({},state,{loading:action.payload,error:false});default:return state;}}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/reducers/applicationStateReducer.js"],"names":["initialState","SET_CURRENT_SCREEN","SET_APPLICATION_ERROR","SET_APPLICATION_LOADING","count","state","applicationState","action","type","Object","assign","currentScreen","payload","loading","error"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OACEC,kBADF,CACsBC,qBADtB,CAC6CC,uBAD7C,KAEO,wBAFP,CAIA,cAAe,SAASC,CAAAA,KAAT,EAA8D,IAA/CC,CAAAA,KAA+C,2DAAvCL,YAAY,CAACM,gBAA0B,IAARC,CAAAA,MAAQ,2CAC3E,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,kBAAL,CACE,MAAOQ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BM,aAAa,CAAEJ,MAAM,CAACK,OADQ,CAE9BC,OAAO,CAAE,KAFqB,CAG9BC,KAAK,CAAE,KAHuB,CAAzB,CAAP,CAKF,IAAKZ,CAAAA,qBAAL,CACE,MAAOO,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BS,KAAK,CAAEP,MAAM,CAACK,OADgB,CAE9BC,OAAO,CAAE,KAFqB,CAAzB,CAAP,CAIF,IAAKV,CAAAA,uBAAL,CACE,MAAOM,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BQ,OAAO,CAAEN,MAAM,CAACK,OADc,CAE9BE,KAAK,CAAE,KAFuB,CAAzB,CAAP,CAIF,QACE,MAAOT,CAAAA,KAAP,CAlBJ,CAoBD","sourcesContent":["import initialState from './initialState';\nimport {\n  SET_CURRENT_SCREEN, SET_APPLICATION_ERROR, SET_APPLICATION_LOADING\n} from '../actions/actionTypes';\n\nexport default function count(state = initialState.applicationState, action) {\n  switch (action.type) {\n    case SET_CURRENT_SCREEN:\n      return Object.assign({}, state, {\n        currentScreen: action.payload,\n        loading: false,\n        error: false\n      });\n    case SET_APPLICATION_ERROR:\n      return Object.assign({}, state, {\n        error: action.payload,\n        loading: false\n      });\n    case SET_APPLICATION_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}