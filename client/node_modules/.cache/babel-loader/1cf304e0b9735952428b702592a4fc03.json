{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/TopMenu.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { connectToSocket, disconnectFromSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\nimport { setUserLoggedIn } from '../actions/userActions';\n\nfunction TopMenu(props) {\n  const {\n    connectToSocket,\n    disconnectFromSocket,\n    setCurrentScreen,\n    setUserLoggedIn,\n    user\n  } = props;\n  const userLoggedIn = user.loggedIn;\n\n  const handlePlay = () => {\n    setCurrentScreen('GameSession');\n    connectToSocket();\n  };\n\n  const handleLogout = () => {\n    disconnectFromSocket();\n    localStorage.removeItem('jwt');\n    setUserLoggedIn(false);\n    setCurrentScreen('Logout');\n  };\n\n  const handleSignup = () => {\n    disconnectFromSocket();\n    setCurrentScreen('Signup');\n  };\n\n  const renderMainSection = () => {\n    let toRender = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSignup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }\n    }, \"Sign Up\");\n\n    if (userLoggedIn) {\n      toRender = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Profile\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Logout\"));\n    }\n\n    return toRender;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Play\"), renderMainSection());\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    disconnectFromSocket: disconnectFromSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopMenu);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/TopMenu.jsx"],"names":["React","connect","connectToSocket","disconnectFromSocket","setCurrentScreen","setUserLoggedIn","TopMenu","props","user","userLoggedIn","loggedIn","handlePlay","handleLogout","localStorage","removeItem","handleSignup","renderMainSection","toRender","textAlign","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,EAA0BC,oBAA1B,QAAsD,0BAAtD;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,eAAT,QAAgC,wBAAhC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AACJL,IAAAA,eADI;AACaC,IAAAA,oBADb;AACmCC,IAAAA,gBADnC;AAEJC,IAAAA,eAFI;AAEaG,IAAAA;AAFb,MAGFD,KAHJ;AAIA,QAAME,YAAY,GAAGD,IAAI,CAACE,QAA1B;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,gBAAgB,CAAC,aAAD,CAAhB;AACAF,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMU,YAAY,GAAG,MAAM;AACzBT,IAAAA,oBAAoB;AACpBU,IAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAT,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAD,IAAAA,gBAAgB,CAAC,QAAD,CAAhB;AACD,GALD;;AAOA,QAAMW,YAAY,GAAG,MAAM;AACzBZ,IAAAA,oBAAoB;AACpBC,IAAAA,gBAAgB,CAAC,QAAD,CAAhB;AACD,GAHD;;AAKA,QAAMY,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,QAAQ,gBAAG;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAf;;AAEA,QAAIN,YAAJ,EAAkB;AAChBQ,MAAAA,QAAQ,gBACN,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAQ,QAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;AAED,WAAOK,QAAP;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEP,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,iBAAiB,EAFpB,CADF;AAMD;;AAED,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,eAAe,EAAEA,eAAe,CAACkB,QAAD,CAD3B;AAELjB,IAAAA,oBAAoB,EAAEA,oBAAoB,CAACiB,QAAD,CAFrC;AAGLhB,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACgB,QAAD;AAH7B,GAAP;AAKD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd;AADP,GAAP;AAGD;;AAED,eAAeP,OAAO,CACpBoB,eADoB,EAEpBF,kBAFoB,CAAP,CAGbb,OAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { connectToSocket, disconnectFromSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\nimport { setUserLoggedIn } from '../actions/userActions';\n\nfunction TopMenu(props) {\n  const {\n    connectToSocket, disconnectFromSocket, setCurrentScreen,\n    setUserLoggedIn, user\n  } = props;\n  const userLoggedIn = user.loggedIn;\n\n  const handlePlay = () => {\n    setCurrentScreen('GameSession');\n    connectToSocket();\n  }\n\n  const handleLogout = () => {\n    disconnectFromSocket();\n    localStorage.removeItem('jwt');\n    setUserLoggedIn(false);\n    setCurrentScreen('Logout');\n  }\n\n  const handleSignup = () => {\n    disconnectFromSocket();\n    setCurrentScreen('Signup');\n  }\n\n  const renderMainSection = () => {\n    let toRender = <button onClick={handleSignup}>Sign Up</button>\n\n    if (userLoggedIn) {\n      toRender = (\n        <>\n          <button>Profile</button>\n          <button onClick={handleLogout}>Logout</button>\n        </>\n      );\n    }\n\n    return toRender;\n  }\n\n  return (\n    <div style={{ textAlign: \"right\" }}>\n      <button onClick={handlePlay}>Play</button>\n      {renderMainSection()}\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    disconnectFromSocket: disconnectFromSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TopMenu);\n"]},"metadata":{},"sourceType":"module"}