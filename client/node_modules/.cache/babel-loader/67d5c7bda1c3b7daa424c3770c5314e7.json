{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from 'socket.io-client';\nimport { connectToSocket } from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\nlet socket;\n\nfunction GameSession(props) {\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n\n  if (props.error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }\n    }, props.error.message);\n  }\n\n  ;\n\n  if (props.loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.connectToSocket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"loooooool\"), /*#__PURE__*/React.createElement(ClickableArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSession);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["React","useState","useEffect","connect","socketIOClient","connectToSocket","ClickableArea","socket","GameSession","props","loading","setLoading","connectedToSocket","setConnectedToSocket","error","message","textAlign","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,IAAIC,MAAJ;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,KAAD,CAA1D;;AAEA,MAAIQ,KAAK,CAACK,KAAV,EAAiB;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,KAAK,CAACK,KAAN,CAAYC,OAAlB,CAAP;AAA0C;;AAAA;;AAC7D,MAAIN,KAAK,CAACC,OAAV,EAAmB;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAEpD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAEP,KAAK,CAACJ,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,SAASY,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLX,IAAAA,MAAM,EAAEW,KAAK,CAACX;AADT,GAAP;AAGD;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLf,IAAAA,eAAe,EAAEA,eAAe,CAACe,QAAD;AAD3B,GAAP;AAGD;;AAED,eAAejB,OAAO,CACpBc,eADoB,EAEpBE,kBAFoB,CAAP,CAGbX,WAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport socketIOClient from 'socket.io-client';\n\nimport { connectToSocket } from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\n\nlet socket;\n\nfunction GameSession(props) {\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n\n  if (props.error) { return <div>{props.error.message}</div>; };\n  if (props.loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div onClick={props.connectToSocket}>loooooool</div>\n      <ClickableArea />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameSession);\n"]},"metadata":{},"sourceType":"module"}