{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/Signup.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const {\n    connectToSocket,\n    setCurrentScreen\n  } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession');\n    connectToSocket();\n  };\n\n  const signupForm = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, \"Sign Up Form\");\n  };\n\n  const signupSuccess = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Congrats, your account had been created!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Signed in as: USER EMAIL GOES HERE\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleStartNewGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Start New Game\"));\n  };\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch (signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n\n      case 'Loading':\n        toRender = signupLoading();\n        break;\n\n      case 'Error':\n        // already logged in error needs to be handled here\n        toRender = signupError();\n        break;\n\n      case 'SignupSuccess':\n        toRender = signupSuccess();\n        break;\n\n      default:\n        toRender = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }\n        }, \"Error\");\n    }\n\n    return toRender;\n  };\n\n  return renderSignupStep();\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/Signup.jsx"],"names":["React","useState","connect","connectToSocket","setCurrentScreen","Signup","props","signupStep","setSignupStep","handleStartNewGame","signupForm","signupSuccess","textAlign","renderSignupStep","toRender","signupLoading","signupError","mapStateToProps","state","socket","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,gBAAT,QAAiC,oCAAjC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEH,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAwCE,KAA9C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,YAAD,CAA5C;;AAEA,QAAMQ,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,gBAAgB,CAAC,aAAD,CAAhB;AACAD,IAAAA,eAAe;AAChB,GAHD;;AAKA,QAAMO,UAAU,GAAG,MAAM;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,GAJD;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1B,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,eAGE;AAAQ,MAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADF;AAOD,GARD;;AAUA,QAAMI,gBAAgB,GAAG,MAAM;AAC7B,QAAIC,QAAJ;;AAEA,YAAOP,UAAP;AACE,WAAK,YAAL;AACEO,QAAAA,QAAQ,GAAGJ,UAAU,EAArB;AACA;;AACF,WAAK,SAAL;AACEI,QAAAA,QAAQ,GAAGC,aAAa,EAAxB;AACA;;AACF,WAAK,OAAL;AACE;AACAD,QAAAA,QAAQ,GAAGE,WAAW,EAAtB;AACA;;AACF,WAAK,eAAL;AACEF,QAAAA,QAAQ,GAAGH,aAAa,EAAxB;AACA;;AACF;AACEG,QAAAA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX;AAfJ;;AAkBA,WAAOA,QAAP;AACD,GAtBD;;AAwBA,SAAOD,gBAAgB,EAAvB;AACD;;AAED,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADT,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,eAAe,EAAEA,eAAe,CAACkB,QAAD,CAD3B;AAELjB,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACiB,QAAD;AAF7B,GAAP;AAID;;AAED,eAAenB,OAAO,CACpBe,eADoB,EAEpBG,kBAFoB,CAAP,CAGbf,MAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const { connectToSocket, setCurrentScreen } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession');\n    connectToSocket();\n  }\n\n  const signupForm = () => {\n    return (\n      <div>Sign Up Form</div>\n    );\n  }\n\n  const signupSuccess = () => {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div>Congrats, your account had been created!</div>\n        <div>Signed in as: USER EMAIL GOES HERE</div>\n        <button onClick={handleStartNewGame}>Start New Game</button>\n      </div>\n    );\n  }\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch(signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n      case 'Loading':\n        toRender = signupLoading();\n        break;\n      case 'Error':\n        // already logged in error needs to be handled here\n        toRender = signupError();\n        break;\n      case 'SignupSuccess':\n        toRender = signupSuccess();\n        break;\n      default:\n        toRender = <div>Error</div>;\n    }\n\n    return toRender;\n  }\n\n  return renderSignupStep();\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n"]},"metadata":{},"sourceType":"module"}