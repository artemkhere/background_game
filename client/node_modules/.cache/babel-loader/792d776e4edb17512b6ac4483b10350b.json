{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport { useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport GameSessionSocketContext from '../context/GameSessionSocketContext';\nimport ClickableArea from './components/ClickableArea';\nexport default function GameSession() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n    socket.on('connect_failed', () => {\n      setLoading(false);\n      setError({\n        message: \"Could not connect to server.\"\n      });\n    }); // will need to handle setting global state for returned Tower object with all info\n\n    socket.on(\"FromAPI\", data => {\n      setLoading(false);\n      console.log(data);\n    }); // handle component unload\n\n    return () => {\n      socket.disconnect();\n    };\n  });\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }, error.message);\n  }\n\n  ;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GameSessionSocketContext.Provider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ClickableArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["useState","socketIOClient","GameSessionSocketContext","ClickableArea","GameSession","error","setError","loading","setLoading","connectedToSocket","setConnectedToSocket","socket","setSocket","useEffect","on","message","data","console","log","disconnect","textAlign"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,wBAAP,MAAqC,qCAArC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAa,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAI,IAAAA,SAAS,CAACX,cAAc,CAAC,uBAAD,CAAf,CAAT;AAEAU,IAAAA,MAAM,CAACG,EAAP,CAAU,gBAAV,EAA4B,MAAM;AAChCN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC;AAAES,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAR;AACD,KAHD,EALc,CAUd;;AACAJ,IAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAsBE,IAAD,IAAU;AAC7BR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAHD,EAXc,CAgBd;;AACA,WAAO,MAAM;AAAEL,MAAAA,MAAM,CAACQ,UAAP;AAAsB,KAArC;AACD,GAlBQ,CAAT;;AAoBA,MAAId,KAAJ,EAAW;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACU,OAAZ,CAAP;AAAoC;;AAAA;;AACjD,MAAIR,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAE9C,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAET,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD","sourcesContent":["import { useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nimport GameSessionSocketContext from '../context/GameSessionSocketContext';\nimport ClickableArea from './components/ClickableArea';\n\nexport default function GameSession() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n\n    socket.on('connect_failed', () => {\n      setLoading(false);\n      setError({ message: \"Could not connect to server.\" });\n    });\n\n    // will need to handle setting global state for returned Tower object with all info\n    socket.on(\"FromAPI\", (data) => {\n      setLoading(false);\n      console.log(data);\n    });\n\n    // handle component unload\n    return () => { socket.disconnect(); };\n  });\n\n  if (error) { return <div>{error.message}</div>; };\n  if (loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <GameSessionSocketContext.Provider value={socket} >\n        <ClickableArea />\n      </GameSessionSocketContext.Provider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}