{"ast":null,"code":"import initialState from './initialState';\nimport { SOCKET_SET_LOADING, SOCKET_CONNECT, SOCKET_SET_ERROR } from '../actions/actionTypes';\nexport default function count(state = initialState.socket, action) {\n  switch (action.type) {\n    case SOCKET_SET_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false,\n        connected: false\n      });\n\n    case SOCKET_CONNECT:\n      return Object.assign({}, state, {\n        loading: false,\n        error: false,\n        connected: true\n      });\n\n    case SOCKET_SET_ERROR:\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/reducers/socketReducer.js"],"names":["initialState","SOCKET_SET_LOADING","SOCKET_CONNECT","SOCKET_SET_ERROR","count","state","socket","action","type","Object","assign","loading","payload","error","connected"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SACEC,kBADF,EACsBC,cADtB,EACsCC,gBADtC,QAEO,wBAFP;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGL,YAAY,CAACM,MAApC,EAA4CC,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,kBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BM,QAAAA,OAAO,EAAEJ,MAAM,CAACK,OADc;AAE9BC,QAAAA,KAAK,EAAE,KAFuB;AAG9BC,QAAAA,SAAS,EAAE;AAHmB,OAAzB,CAAP;;AAKF,SAAKZ,cAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BM,QAAAA,OAAO,EAAE,KADqB;AAE9BE,QAAAA,KAAK,EAAE,KAFuB;AAG9BC,QAAAA,SAAS,EAAE;AAHmB,OAAzB,CAAP;;AAKF,SAAKX,gBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BM,QAAAA,OAAO,EAAE,KADqB;AAE9BE,QAAAA,KAAK,EAAEN,MAAM,CAACK;AAFgB,OAAzB,CAAP;;AAIF;AACE,aAAOP,KAAP;AAnBJ;AAqBD","sourcesContent":["import initialState from './initialState';\nimport {\n  SOCKET_SET_LOADING, SOCKET_CONNECT, SOCKET_SET_ERROR\n} from '../actions/actionTypes';\n\nexport default function count(state = initialState.socket, action) {\n  switch (action.type) {\n    case SOCKET_SET_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false,\n        connected: false\n      });\n    case SOCKET_CONNECT:\n      return Object.assign({}, state, {\n        loading: false,\n        error: false,\n        connected: true\n      });\n    case SOCKET_SET_ERROR:\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}