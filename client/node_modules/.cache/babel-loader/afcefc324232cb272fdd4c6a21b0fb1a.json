{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ClickableArea from './ClickableArea';\n\nfunction GameSession(props) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false);\n  useEffect(() => {\n    props.connectToGameSessionSocket();\n  }); // useEffect(() => {\n  //   setLoading(true);\n  //\n  //   setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n  //\n  //   if (socket) {\n  //     socket.on('connect_failed', () => {\n  //       setLoading(false);\n  //       setError({ message: \"Could not connect to server.\" });\n  //     });\n  //\n  //     // will need to handle setting global state for returned Tower object with all info\n  //     socket.on(\"FromAPI\", (data) => {\n  //       setLoading(false);\n  //       console.log(data);\n  //     });\n  //\n  //     // handle component unload\n  //     return () => { socket.disconnect(); };\n  //   } else {\n  //     setLoading(false);\n  //     setError({ message: \"Could not connect to server.\" });\n  //   }\n  // });\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }\n    }, error.message);\n  }\n\n  ;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ClickableArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count,\n    stuff: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToGameSessionSocket: () => dispatch({\n      type: \"GAME_SESSION_SOCKET_CONNECT\"\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSession);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["React","useState","useEffect","connect","ClickableArea","GameSession","props","error","setError","loading","setLoading","connectedToSocket","setConnectedToSocket","socket","setSocket","connectToGameSessionSocket","message","textAlign","mapStateToProps","state","count","stuff","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACS,0BAAN;AACD,GAFQ,CAAT,CAN0B,CAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIR,KAAJ,EAAW;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACS,OAAZ,CAAP;AAAoC;;AAAA;;AACjD,MAAIP,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAE9C,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID;;AAED,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLR,IAAAA,0BAA0B,EAAE,MAAMQ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AADrC,GAAP;AAGD;;AAED,eAAerB,OAAO,CACpBe,eADoB,EAEpBI,kBAFoB,CAAP,CAGbjB,WAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport ClickableArea from './ClickableArea';\n\nfunction GameSession(props) {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false);\n\n  useEffect(() => {\n    props.connectToGameSessionSocket();\n  });\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //\n  //   setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n  //\n  //   if (socket) {\n  //     socket.on('connect_failed', () => {\n  //       setLoading(false);\n  //       setError({ message: \"Could not connect to server.\" });\n  //     });\n  //\n  //     // will need to handle setting global state for returned Tower object with all info\n  //     socket.on(\"FromAPI\", (data) => {\n  //       setLoading(false);\n  //       console.log(data);\n  //     });\n  //\n  //     // handle component unload\n  //     return () => { socket.disconnect(); };\n  //   } else {\n  //     setLoading(false);\n  //     setError({ message: \"Could not connect to server.\" });\n  //   }\n  // });\n\n  if (error) { return <div>{error.message}</div>; };\n  if (loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <ClickableArea />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    count: state.count,\n    stuff: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToGameSessionSocket: () => dispatch({ type: \"GAME_SESSION_SOCKET_CONNECT\" })\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameSession);\n"]},"metadata":{},"sourceType":"module"}