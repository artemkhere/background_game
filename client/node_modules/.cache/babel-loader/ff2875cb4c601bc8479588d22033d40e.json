{"ast":null,"code":"import initialState from './initialState';\nimport { SET_CURRENT_SCREEN, SET_APPLICATION_ERROR, SET_APPLICATION_LOADING } from '../actions/actionTypes';\nexport default function count(state = initialState.applicationState, action) {\n  switch (action.type) {\n    case SET_CURRENT_SCREEN:\n      return Object.assign({}, state, {\n        currentScreen: action.payload,\n        loading: false,\n        error: false\n      });\n\n    case SET_APPLICATION_ERROR:\n      return Object.assign({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case SET_APPLICATION_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/reducers/applicationStateReducer.js"],"names":["initialState","SET_CURRENT_SCREEN","SET_APPLICATION_ERROR","SET_APPLICATION_LOADING","count","state","applicationState","action","type","Object","assign","currentScreen","payload","loading","error"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SACEC,kBADF,EACsBC,qBADtB,EAC6CC,uBAD7C,QAEO,wBAFP;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGL,YAAY,CAACM,gBAApC,EAAsDC,MAAtD,EAA8D;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,kBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BM,QAAAA,aAAa,EAAEJ,MAAM,CAACK,OADQ;AAE9BC,QAAAA,OAAO,EAAE,KAFqB;AAG9BC,QAAAA,KAAK,EAAE;AAHuB,OAAzB,CAAP;;AAKF,SAAKZ,qBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BS,QAAAA,KAAK,EAAEP,MAAM,CAACK,OADgB;AAE9BC,QAAAA,OAAO,EAAE;AAFqB,OAAzB,CAAP;;AAIF,SAAKV,uBAAL;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BQ,QAAAA,OAAO,EAAEN,MAAM,CAACK,OADc;AAE9BE,QAAAA,KAAK,EAAE;AAFuB,OAAzB,CAAP;;AAIF;AACE,aAAOT,KAAP;AAlBJ;AAoBD","sourcesContent":["import initialState from './initialState';\nimport {\n  SET_CURRENT_SCREEN, SET_APPLICATION_ERROR, SET_APPLICATION_LOADING\n} from '../actions/actionTypes';\n\nexport default function count(state = initialState.applicationState, action) {\n  switch (action.type) {\n    case SET_CURRENT_SCREEN:\n      return Object.assign({}, state, {\n        currentScreen: action.payload,\n        loading: false,\n        error: false\n      });\n    case SET_APPLICATION_ERROR:\n      return Object.assign({}, state, {\n        error: action.payload,\n        loading: false\n      });\n    case SET_APPLICATION_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}