{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/Signup.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const {\n    connectToSocket,\n    setCurrentScreen\n  } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession'); // in this connectToSocket I will need to pass userID and jwt\n\n    connectToSocket();\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.userPostFetch(this.state);\n  };\n\n  const signupForm = () => {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Sign Up For An Account\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const signupSuccess = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Congrats, your account had been created!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Signed in as: USER EMAIL GOES HERE\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleStartNewGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Start New Game\"));\n  };\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch (signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n      // case 'Loading':\n      //   toRender = signupLoading();\n      //   break;\n      // case 'Error':\n      //   // already logged in error needs to be handled here\n      //   toRender = signupError();\n      //   break;\n      // case 'SignupSuccess':\n      //   toRender = signupSuccess();\n      //   break;\n\n      default:\n        toRender = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 20\n          }\n        }, \"Error\");\n    }\n\n    return toRender;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, renderSignupStep());\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/Signup.jsx"],"names":["React","useState","connect","connectToSocket","setCurrentScreen","Signup","props","signupStep","setSignupStep","username","setUsername","password","setPassword","handleStartNewGame","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","userPostFetch","state","signupForm","signupSuccess","textAlign","renderSignupStep","toRender","mapStateToProps","socket","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { connectToSocket } from '../actions/socketActions';\nimport { setCurrentScreen } from '../actions/applicationStateActions';\n\nfunction Signup(props) {\n  const { connectToSocket, setCurrentScreen } = props;\n  const [signupStep, setSignupStep] = useState('SignupForm');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleStartNewGame = () => {\n    setCurrentScreen('GameSession');\n    // in this connectToSocket I will need to pass userID and jwt\n    connectToSocket();\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.userPostFetch(this.state)\n  }\n\n  const signupForm = () => {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>Sign Up For An Account</h1>\n\n        <label>Username</label>\n        <input\n          name='username'\n          placeholder='Username'\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <br/>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <input type='submit'/>\n      </form>\n    );\n  }\n\n  const signupSuccess = () => {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div>Congrats, your account had been created!</div>\n        <div>Signed in as: USER EMAIL GOES HERE</div>\n        <button onClick={handleStartNewGame}>Start New Game</button>\n      </div>\n    );\n  }\n\n  const renderSignupStep = () => {\n    let toRender;\n\n    switch(signupStep) {\n      case 'SignupForm':\n        toRender = signupForm();\n        break;\n      // case 'Loading':\n      //   toRender = signupLoading();\n      //   break;\n      // case 'Error':\n      //   // already logged in error needs to be handled here\n      //   toRender = signupError();\n      //   break;\n      // case 'SignupSuccess':\n      //   toRender = signupSuccess();\n      //   break;\n      default:\n        toRender = <div>Error</div>;\n    }\n\n    return toRender;\n  }\n\n  return (\n    <div>{renderSignupStep()}</div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    setCurrentScreen: setCurrentScreen(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Signup);\n"]},"metadata":{},"sourceType":"module"}