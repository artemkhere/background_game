{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{socketEmit}from'../../../actions/socketActions';function StructureShop(props){var socketEmit=props.socketEmit;var gameSchema=props.gameSession.gameSchema;var handleBuyStructure=function handleBuyStructure(structureName){return function(){socketEmit({eventName:'structureAction',data:{actionType:'buy',structureName:structureName}});};};// parse structures to be displayed and not shown\nvar structureList=gameSchema.structureShop.map(function(structure){if(structure.shouldDisplay){var baseInfo=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"Name: \",structure.name),/*#__PURE__*/React.createElement(\"div\",null,\"Price: \",structure.price),/*#__PURE__*/React.createElement(\"div\",null,\"Description: \",structure.description));if(structure.canBePurchased){return/*#__PURE__*/React.createElement(\"div\",null,baseInfo,/*#__PURE__*/React.createElement(\"button\",{onClick:handleBuyStructure(structure.name)},\"Buy Structure\"));}else{return/*#__PURE__*/React.createElement(\"div\",null,baseInfo,/*#__PURE__*/React.createElement(\"div\",null,\"Requirements to buy: \",structure.canBePurchasedRequirements));}}else{return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,\"??? MYSTERY STRUCTURE ???\"),/*#__PURE__*/React.createElement(\"div\",null,\"Will show when: \",structure.shouldDisplayRequirements));}});return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"right\"}},/*#__PURE__*/React.createElement(\"div\",null,\"Structure Shop:\"),structureList);}function mapStateToProps(state){return{gameSession:state.gameSession};}function mapDispatchToProps(dispatch){return{socketEmit:socketEmit(dispatch)};}export default connect(mapStateToProps,mapDispatchToProps)(StructureShop);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession/structures/StructureShop.jsx"],"names":["React","connect","socketEmit","StructureShop","props","gameSchema","gameSession","handleBuyStructure","structureName","eventName","data","actionType","structureList","structureShop","map","structure","shouldDisplay","baseInfo","name","price","description","canBePurchased","canBePurchasedRequirements","shouldDisplayRequirements","textAlign","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,UAAT,KAA2B,gCAA3B,CAEA,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,IACpBF,CAAAA,UADoB,CACLE,KADK,CACpBF,UADoB,IAEpBG,CAAAA,UAFoB,CAELD,KAAK,CAACE,WAFD,CAEpBD,UAFoB,CAI5B,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,aAAD,CAAmB,CAC5C,MAAO,WAAM,CACXN,UAAU,CAAC,CACTO,SAAS,CAAE,iBADF,CAETC,IAAI,CAAE,CAAEC,UAAU,CAAE,KAAd,CAAqBH,aAAa,CAAbA,aAArB,CAFG,CAAD,CAAV,CAID,CALD,CAMD,CAPD,CASA;AACA,GAAMI,CAAAA,aAAa,CAAGP,UAAU,CAACQ,aAAX,CAAyBC,GAAzB,CAA6B,SAACC,SAAD,CAAe,CAChE,GAAIA,SAAS,CAACC,aAAd,CAA6B,CAC3B,GAAMC,CAAAA,QAAQ,cACZ,4CACE,wCAAYF,SAAS,CAACG,IAAtB,CADF,cAEE,yCAAaH,SAAS,CAACI,KAAvB,CAFF,cAGE,+CAAmBJ,SAAS,CAACK,WAA7B,CAHF,CADF,CAQA,GAAIL,SAAS,CAACM,cAAd,CAA8B,CAC5B,mBACE,+BACGJ,QADH,cAEE,8BAAQ,OAAO,CAAEV,kBAAkB,CAACQ,SAAS,CAACG,IAAX,CAAnC,kBAFF,CADF,CAMD,CAPD,IAOO,CACL,mBACE,+BACGD,QADH,cAEE,uDAA2BF,SAAS,CAACO,0BAArC,CAFF,CADF,CAMD,CACF,CAxBD,IAwBO,CACL,mBACE,4CACE,2DADF,cAEE,kDAAsBP,SAAS,CAACQ,yBAAhC,CAFF,CADF,CAMD,CACF,CAjCqB,CAAtB,CAmCA,mBACE,2BAAK,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAb,CAAZ,eACE,iDADF,CAEGZ,aAFH,CADF,CAMD,CAED,QAASa,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLpB,WAAW,CAAEoB,KAAK,CAACpB,WADd,CAAP,CAGD,CAED,QAASqB,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACL1B,UAAU,CAAEA,UAAU,CAAC0B,QAAD,CADjB,CAAP,CAGD,CAED,cAAe3B,CAAAA,OAAO,CACpBwB,eADoB,CAEpBE,kBAFoB,CAAP,CAGbxB,aAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { socketEmit } from '../../../actions/socketActions';\n\nfunction StructureShop(props) {\n  const { socketEmit } = props;\n  const { gameSchema } = props.gameSession;\n\n  const handleBuyStructure = (structureName) => {\n    return () => {\n      socketEmit({\n        eventName: 'structureAction',\n        data: { actionType: 'buy', structureName }\n      });\n    }\n  }\n\n  // parse structures to be displayed and not shown\n  const structureList = gameSchema.structureShop.map((structure) => {\n    if (structure.shouldDisplay) {\n      const baseInfo = (\n        <div>\n          <div>Name: {structure.name}</div>\n          <div>Price: {structure.price}</div>\n          <div>Description: {structure.description}</div>\n        </div>\n      );\n\n      if (structure.canBePurchased) {\n        return (\n          <div>\n            {baseInfo}\n            <button onClick={handleBuyStructure(structure.name)}>Buy Structure</button>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            {baseInfo}\n            <div>Requirements to buy: {structure.canBePurchasedRequirements}</div>\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div>\n          <div>??? MYSTERY STRUCTURE ???</div>\n          <div>Will show when: {structure.shouldDisplayRequirements}</div>\n        </div>\n      );\n    }\n  });\n\n  return (\n    <div style={{ textAlign: \"right\" }}>\n      <div>Structure Shop:</div>\n      {structureList}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    gameSession: state.gameSession,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    socketEmit: socketEmit(dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StructureShop);\n"]},"metadata":{},"sourceType":"module"}