{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { connectToSocket, disconnectFromSocket, buyItem } from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\n\nfunction GameSession(props) {\n  const {\n    error,\n    loading\n  } = props.socket;\n  const {\n    resources,\n    gameState\n  } = props.gameSession;\n  const {\n    connectToSocket,\n    disconnectFromSocket,\n    setCurrentScreen\n  } = props;\n\n  const handleQuit = () => {\n    disconnectFromSocket();\n    setCurrentScreen('LandingPage');\n  };\n\n  const buyItem = () => {};\n\n  const displayItems = items => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, items.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 39\n        }\n      }, item);\n    }));\n  };\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"There was an error\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: connectToSocket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Connect to Socket\"));\n  }\n\n  ;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleQuit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Quit\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Resources: \", resources), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Items:\"), displayItems(gameState.items), /*#__PURE__*/React.createElement(ClickableArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buyItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Buy Item\"));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket,\n    gameSession: state.gameSession\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    disconnectFromSocket: disconnectFromSocket(dispatch),\n    buyItem: buyItem(dispatch, name)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSession);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["React","connect","connectToSocket","disconnectFromSocket","buyItem","ClickableArea","GameSession","props","error","loading","socket","resources","gameState","gameSession","setCurrentScreen","handleQuit","displayItems","items","map","item","textAlign","mapStateToProps","state","mapDispatchToProps","dispatch","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,eADF,EACmBC,oBADnB,EACyCC,OADzC,QAEO,0BAFP;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAAK,CAACG,MAAjC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BL,KAAK,CAACM,WAAvC;AACA,QAAM;AAAEX,IAAAA,eAAF;AAAmBC,IAAAA,oBAAnB;AAAyCW,IAAAA;AAAzC,MAA8DP,KAApE;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACvBZ,IAAAA,oBAAoB;AACpBW,IAAAA,gBAAgB,CAAC,aAAD,CAAhB;AACD,GAHD;;AAKA,QAAMV,OAAO,GAAG,MAAM,CAErB,CAFD;;AAIA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC9B,wBACE,0CACGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAN,CAAP;AAA2B,KAAjD,CADH,CADF;AAKD,GAND;;AAQA,MAAIX,KAAJ,EAAW;AACT,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAQ,MAAA,OAAO,EAAEN,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADF;AAMD;;AAAA;;AAED,MAAIO,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAE9C,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBJ,SAAjB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGK,YAAY,CAACJ,SAAS,CAACK,KAAX,CAJf,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAQ,IAAA,OAAO,EAAEb,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF;AAUD;;AAED,SAASiB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLZ,IAAAA,MAAM,EAAEY,KAAK,CAACZ,MADT;AAELG,IAAAA,WAAW,EAAES,KAAK,CAACT;AAFd,GAAP;AAID;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLtB,IAAAA,eAAe,EAAEA,eAAe,CAACsB,QAAD,CAD3B;AAELrB,IAAAA,oBAAoB,EAAEA,oBAAoB,CAACqB,QAAD,CAFrC;AAGLpB,IAAAA,OAAO,EAAEA,OAAO,CAACoB,QAAD,EAAWC,IAAX;AAHX,GAAP;AAKD;;AAED,eAAexB,OAAO,CACpBoB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbjB,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  connectToSocket, disconnectFromSocket, buyItem\n} from '../actions/socketActions';\nimport ClickableArea from './ClickableArea';\n\nfunction GameSession(props) {\n  const { error, loading } = props.socket;\n  const { resources, gameState } = props.gameSession;\n  const { connectToSocket, disconnectFromSocket, setCurrentScreen } = props;\n\n  const handleQuit = () => {\n    disconnectFromSocket();\n    setCurrentScreen('LandingPage');\n  }\n\n  const buyItem = () => {\n\n  }\n\n  const displayItems = (items) => {\n    return (\n      <>\n        {items.map((item) => { return <div>{item}</div>; })}\n      </>\n    );\n  }\n\n  if (error) {\n    return (\n      <div>\n        <div>There was an error</div>\n        <button onClick={connectToSocket}>Connect to Socket</button>\n      </div>\n    );\n  };\n\n  if (loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <button onClick={handleQuit}>Quit</button>\n      <div>Resources: {resources}</div>\n      <div>Items:</div>\n      {displayItems(gameState.items)}\n      <ClickableArea />\n      <button onClick={buyItem}>Buy Item</button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket,\n    gameSession: state.gameSession\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    connectToSocket: connectToSocket(dispatch),\n    disconnectFromSocket: disconnectFromSocket(dispatch),\n    buyItem: buyItem(dispatch, name)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GameSession);\n"]},"metadata":{},"sourceType":"module"}