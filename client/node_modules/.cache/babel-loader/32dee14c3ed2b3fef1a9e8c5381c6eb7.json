{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{setApplicationError}from'../actions/applicationStateActions';function ErrorModal(props){var setApplicationError=props.setApplicationError,applicationState=props.applicationState;var error=applicationState.error;var handleCloseModal=function handleCloseModal(){setApplicationError(false);};return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"div\",null,\"Error: \",error&&error.message),/*#__PURE__*/React.createElement(\"button\",{onClick:handleCloseModal},\"Close\"));}function mapStateToProps(state){return{applicationState:state.applicationState};}function mapDispatchToProps(dispatch){return{setApplicationError:setApplicationError(dispatch)};}export default connect(mapStateToProps,mapDispatchToProps)(ErrorModal);","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/ErrorModal.jsx"],"names":["React","connect","setApplicationError","ErrorModal","props","applicationState","error","handleCloseModal","textAlign","message","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,OAASC,mBAAT,KAAoC,oCAApC,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,IACjBF,CAAAA,mBADiB,CACyBE,KADzB,CACjBF,mBADiB,CACIG,gBADJ,CACyBD,KADzB,CACIC,gBADJ,CAEzB,GAAMC,CAAAA,KAAK,CAAGD,gBAAgB,CAACC,KAA/B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BL,mBAAmB,CAAC,KAAD,CAAnB,CACD,CAFD,CAIA,mBACE,2BAAK,KAAK,CAAE,CAAEM,SAAS,CAAE,QAAb,CAAZ,eACE,yCAAaF,KAAK,EAAIA,KAAK,CAACG,OAA5B,CADF,cAEE,8BAAQ,OAAO,CAAEF,gBAAjB,UAFF,CADF,CAMD,CAED,QAASG,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLN,gBAAgB,CAAEM,KAAK,CAACN,gBADnB,CAAP,CAGD,CAED,QAASO,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLX,mBAAmB,CAAEA,mBAAmB,CAACW,QAAD,CADnC,CAAP,CAGD,CAED,cAAeZ,CAAAA,OAAO,CACpBS,eADoB,CAEpBE,kBAFoB,CAAP,CAGbT,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { setApplicationError } from '../actions/applicationStateActions';\n\nfunction ErrorModal(props) {\n  const { setApplicationError, applicationState } = props;\n  const error = applicationState.error;\n\n  const handleCloseModal = () => {\n    setApplicationError(false);\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div>Error: {error && error.message}</div>\n      <button onClick={handleCloseModal}>Close</button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    applicationState: state.applicationState\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setApplicationError: setApplicationError(dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ErrorModal);\n"]},"metadata":{},"sourceType":"module"}