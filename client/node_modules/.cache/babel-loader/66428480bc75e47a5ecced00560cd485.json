{"ast":null,"code":"var _jsxFileName = \"/Users/artemk/background_game/frontend/src/components/GameSession.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport GameSessionSocketContext from '../context/GameSessionSocketContext';\nimport ClickableAreaWithSocket from './ClickableArea';\nexport default function GameSession() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false); // useEffect(() => {\n  //   setLoading(true);\n  //\n  //   setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n  //\n  //   if (socket) {\n  //     socket.on('connect_failed', () => {\n  //       setLoading(false);\n  //       setError({ message: \"Could not connect to server.\" });\n  //     });\n  //\n  //     // will need to handle setting global state for returned Tower object with all info\n  //     socket.on(\"FromAPI\", (data) => {\n  //       setLoading(false);\n  //       console.log(data);\n  //     });\n  //\n  //     // handle component unload\n  //     return () => { socket.disconnect(); };\n  //   } else {\n  //     setLoading(false);\n  //     setError({ message: \"Could not connect to server.\" });\n  //   }\n  // });\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }, error.message);\n  }\n\n  ;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GameSessionSocketContext.Provider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ClickableAreaWithSocket, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/components/GameSession.jsx"],"names":["React","useState","useEffect","socketIOClient","GameSessionSocketContext","ClickableAreaWithSocket","GameSession","error","setError","loading","setLoading","connectedToSocket","setConnectedToSocket","socket","setSocket","message","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAOC,wBAAP,MAAqC,qCAArC;AACA,OAAOC,uBAAP,MAAoC,iBAApC;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC,CAJoC,CAMpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIM,KAAJ,EAAW;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACQ,OAAZ,CAAP;AAAoC;;AAAA;;AACjD,MAAIN,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA+B;;AAE9C,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD,CAA0B,QAA1B;AAAmC,IAAA,KAAK,EAAEH,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nimport GameSessionSocketContext from '../context/GameSessionSocketContext';\nimport ClickableAreaWithSocket from './ClickableArea';\n\nexport default function GameSession() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [connectedToSocket, setConnectedToSocket] = useState(false);\n  const [socket, setSocket] = useState(false);\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //\n  //   setSocket(socketIOClient(\"http://127.0.0.1:6969\"));\n  //\n  //   if (socket) {\n  //     socket.on('connect_failed', () => {\n  //       setLoading(false);\n  //       setError({ message: \"Could not connect to server.\" });\n  //     });\n  //\n  //     // will need to handle setting global state for returned Tower object with all info\n  //     socket.on(\"FromAPI\", (data) => {\n  //       setLoading(false);\n  //       console.log(data);\n  //     });\n  //\n  //     // handle component unload\n  //     return () => { socket.disconnect(); };\n  //   } else {\n  //     setLoading(false);\n  //     setError({ message: \"Could not connect to server.\" });\n  //   }\n  // });\n\n  if (error) { return <div>{error.message}</div>; };\n  if (loading) { return <div>Loading...</div>; }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <GameSessionSocketContext.Provider value={socket} >\n        <ClickableAreaWithSocket />\n      </GameSessionSocketContext.Provider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}