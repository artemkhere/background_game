{"ast":null,"code":"import initialState from'./initialState';import{SOCKET_SET_LOADING,SOCKET_CONNECT,SOCKET_SET_ERROR}from'../actions/actionTypes';export default function count(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.socket;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SOCKET_SET_LOADING:return Object.assign({},state,{loading:action.payload,error:false,connected:false});case SOCKET_CONNECT:return Object.assign({},state,{loading:false,error:false,connected:true});case SOCKET_SET_ERROR:return Object.assign({},state,{loading:false,error:action.payload});default:return state;}}","map":{"version":3,"sources":["/Users/artemk/background_game/frontend/src/reducers/socketReducer.js"],"names":["initialState","SOCKET_SET_LOADING","SOCKET_CONNECT","SOCKET_SET_ERROR","count","state","socket","action","type","Object","assign","loading","payload","error","connected"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OACEC,kBADF,CACsBC,cADtB,CACsCC,gBADtC,KAEO,wBAFP,CAIA,cAAe,SAASC,CAAAA,KAAT,EAAoD,IAArCC,CAAAA,KAAqC,2DAA7BL,YAAY,CAACM,MAAgB,IAARC,CAAAA,MAAQ,2CACjE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,kBAAL,CACE,MAAOQ,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BM,OAAO,CAAEJ,MAAM,CAACK,OADc,CAE9BC,KAAK,CAAE,KAFuB,CAG9BC,SAAS,CAAE,KAHmB,CAAzB,CAAP,CAKF,IAAKZ,CAAAA,cAAL,CACE,MAAOO,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BM,OAAO,CAAE,KADqB,CAE9BE,KAAK,CAAE,KAFuB,CAG9BC,SAAS,CAAE,IAHmB,CAAzB,CAAP,CAKF,IAAKX,CAAAA,gBAAL,CACE,MAAOM,CAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBL,KAAlB,CAAyB,CAC9BM,OAAO,CAAE,KADqB,CAE9BE,KAAK,CAAEN,MAAM,CAACK,OAFgB,CAAzB,CAAP,CAIF,QACE,MAAOP,CAAAA,KAAP,CAnBJ,CAqBD","sourcesContent":["import initialState from './initialState';\nimport {\n  SOCKET_SET_LOADING, SOCKET_CONNECT, SOCKET_SET_ERROR\n} from '../actions/actionTypes';\n\nexport default function count(state = initialState.socket, action) {\n  switch (action.type) {\n    case SOCKET_SET_LOADING:\n      return Object.assign({}, state, {\n        loading: action.payload,\n        error: false,\n        connected: false\n      });\n    case SOCKET_CONNECT:\n      return Object.assign({}, state, {\n        loading: false,\n        error: false,\n        connected: true\n      });\n    case SOCKET_SET_ERROR:\n      return Object.assign({}, state, {\n        loading: false,\n        error: action.payload\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}